% Define parameters
a = [0, 1, 0, 0; -8, -4, 8, 4; 0, 0, 0, 0; 80, 40, -160, -60];
b = [0; 80; 20; -1120];
c = [1, 0, 0, 0];
ad = [0.995860265603438, 0.0378696105301410, 0.00212669277812880, 0.00160492825553481; 
      -0.174562623798343, 0.908578953704267, 0.0461683633555589, 0.0573094395666044; 
      0.0311138708080227, 0.0160492825553481, 0.935759216765522, 0.0151544413769853; 
      1.08396104971604, 0.573094395666044, -2.29631635987487, 0.0906898643677941];
bd = [0.0341116067291290; 1.27458305177487; 0.336215739966162; -16.9738474024853];
k = [-3.698404852057682, 0.527354601469353, -0.0569469847116374, 0.0311945072320842];
l = [0.627216669816835; 0.077667216653487; 0.033503186827615; 0.804439585315103];

% Time parameters
dt = 0.04; % Time step
t_end = 10; % End time
t = 0:dt:t_end; % Time vector

% Initialize state variables
x = zeros(4, length(t)); % Continuous states
x_hat = zeros(4, length(t)); % Discrete states

% Initial conditions
x(:,1) = [1; 1; 1; 1]; % Initial continuous state
x_hat(:,1) = [1; 1; 1; 1]; % Initial discrete state
u(:,1) = k*x_hat(:,1); % Initial input
% Simulation loop
for i = 1:length(t)-1
    % Continuous state update
    u(:, i+1) = k*x_hat(:,i);

    % Continuous state update using ode45
    [~, x_temp] = ode45(@(t, x) a * x - b * u(:, i), [0 dt], x(:,i));
    x(:,i+1) = x_temp(end, :)';

    % Discrete state update
    x_hat(:,i+1) = (ad-bd*k-l*c)*x_hat(:,i) +  l*c*x(:,i);
end

% Plot results
figure;
subplot(3,1,1);
plot(t, x);
title('Continuous States');
xlabel('Time (s)');
ylabel('States');
legend('x1', 'x2', 'x3', 'x4');

subplot(3,1,2);
plot(t, x_hat);
title('Discrete States');
xlabel('Time (s)');
ylabel('States');
legend('x1\_hat', 'x2\_hat', 'x3\_hat', 'x4\_hat');

subplot(3,1,3);
plot(t, u);
title('Discrete Control Inputs');
xlabel('Time (s)');
ylabel('Actuations');
legend('u');


x1 = zeros(4, length(t)); % Continuous states
x_hat1 = zeros(4, length(t)); % Discrete states

% Initial conditions
x1(:,1) = [1; 1; 1; 1]; % Initial continuous state
x_hat1(:,1) = [1; 1; 1; 1]; % Initial discrete state
u1(:,1) = K*x_hat1(:,1); % Initial input

for i = 1:length(t)-1
    % Continuous state update
    u1(:, i+1) = K*x_hat1(:,i);

    % Continuous state update using ode45
    [~, x_temp] = ode45(@(t, x) open_loop.a * x - open_loop.b * u1(:, i), [0 dt], x1(:,i));
    [~, x_temp] = ode45(@(t, x) open_loop.a * x - open_loop.b * u1(:, i), [0 dt], x1(:,i));
    x1(:,i+1) = x_temp(end, :)';

    % Discrete state update
    x_hat1(:,i+1) = (open_loop_dt.a-open_loop_dt.b*K-L*open_loop_dt.c)*x_hat1(:,i) +  L*open_loop_dt.c*x1(:,i);
end

% Plot results
figure;
subplot(3,1,1);
plot(t, x1);
title('Continuous States');
xlabel('Time (s)');
ylabel('States');
legend('x1', 'x2', 'x3', 'x4');

subplot(3,1,2);
plot(t, x_hat1);
title('Discrete States');
xlabel('Time (s)');
ylabel('States');
legend('x1\_hat', 'x2\_hat', 'x3\_hat', 'x4\_hat');

subplot(3,1,3);
plot(t, u1);
title('Discrete Control Inputs');
xlabel('Time (s)');
ylabel('Actuations');
legend('u');